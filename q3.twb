<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20191.19.0417.1429                               -->
<workbook original-version='18.1' source-build='2019.1.3 (20191.19.0417.1429)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='输出' inline='true' name='federated.05707dt02su0qz0zrnj3i10hen1s' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='输出' name='textscan.0xj6kon1rw2j8n19xapko0op5dv6'>
            <connection class='textscan' directory='C:/Users/Alfred/Documents/我的 Tableau Prep 存储库/数据源' filename='输出.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0xj6kon1rw2j8n19xapko0op5dv6' name='输出.csv' table='[输出#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='zh_CN' separator=','>
            <column datatype='integer' name='Count' ordinal='0' />
            <column datatype='date' date-parse-format='MM月 yyyy' name='Date' ordinal='1' />
            <column datatype='string' name='LGA' ordinal='2' />
            <column datatype='string' name='Offence category' ordinal='3' />
            <column datatype='string' name='Subcategory' ordinal='4' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[输出.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;zh_Hans_CN&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;￥&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;zh_CN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Count]</local-name>
            <parent-name>[输出.csv]</parent-name>
            <remote-alias>Count</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[输出.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LGA</remote-name>
            <remote-type>129</remote-type>
            <local-name>[LGA]</local-name>
            <parent-name>[输出.csv]</parent-name>
            <remote-alias>LGA</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Offence category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Offence category]</local-name>
            <parent-name>[输出.csv]</parent-name>
            <remote-alias>Offence category</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Subcategory</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Subcategory]</local-name>
            <parent-name>[输出.csv]</parent-name>
            <remote-alias>Subcategory</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Count]' role='measure' type='quantitative' />
      <column datatype='string' name='[LGA]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Offence category]' role='dimension' type='nominal' />
      <column datatype='string' name='[Subcategory]' role='dimension' type='nominal' />
      <column-instance column='[Count]' derivation='Avg' name='[avg:Count:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Count]' derivation='Avg' name='[diff:avg:Count:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[LGA]' derivation='None' name='[none:LGA:nk]' pivot='key' type='nominal' />
      <column-instance column='[Offence category]' derivation='None' name='[none:Offence category:nk]' pivot='key' type='nominal' />
      <column-instance column='[Subcategory]' derivation='None' name='[none:Subcategory:nk]' pivot='key' type='nominal' />
      <column-instance column='[Count]' derivation='Sum' name='[sum:Count:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.501374' measure-ordering='alphabetic' measure-percentage='0.498626' rowDisplayCount='1000' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.05707dt02su0qz0zrnj3i10hen1s].[avg:Count:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.05707dt02su0qz0zrnj3i10hen1s].[diff:avg:Count:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.05707dt02su0qz0zrnj3i10hen1s].[sum:Count:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.05707dt02su0qz0zrnj3i10hen1s].[sum:Number of Records:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Offence category:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Drug offences&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Against justice procedures&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Transport regulatory offences&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Liquor offences&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Homicide&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Betting and gaming offences&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Robbery&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Abduction and kidnapping&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Prohibited and regulated weapons offences&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Blackmail and extortion&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Other offences&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Other offences against the person&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Prostitution offences&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Malicious damage to property&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Theft&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Sexual offences&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Disorderly conduct&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Assault&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pornography offences&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Intimidation, stalking and harassment&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Arson&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:LGA:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Sydney&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Subcategory:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Dealing, trafficking in amphetamines&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Other theft&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Assault Police&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Indecent assault, act of indecency and other sexual offences&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Manslaughter *&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Robbery with a firearm&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Fraud&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Murder accessory, conspiracy&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dealing, trafficking in narcotics&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Steal from person&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dealing, trafficking in cannabis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Receiving or handling stolen goods&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Trespass&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Motor vehicle theft&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Possession and/or use of cocaine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Fail to appear&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Importing drugs&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Attempted murder&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Break and enter dwelling&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Breach bail conditions&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Other drug offences&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Possession and/or use of narcotics&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Criminal intent&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;N/A&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dealing, trafficking in other drugs&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Steal from retail store&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Offensive conduct&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Stock theft&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Escape custody&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Possession and/or use of amphetamines&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Possession and/or use of other drugs&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Other offences against justice procedures&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Possession and/or use of cannabis&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dealing, trafficking in cocaine&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Robbery without a weapon&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Steal from dwelling&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cultivating cannabis&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Non-domestic violence related assault&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Break and enter non-dwelling&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Manufacture drug&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Robbery with a weapon not a firearm&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sexual assault&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Breach Apprehended Violence Order&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Offensive language&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Possession and/or use of ecstasy&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Resist or hinder officer&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dealing, trafficking in ecstasy&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Steal from motor vehicle&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Domestic violence related assault&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Murder *&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;China&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='OG2'>
      <table>
        <view>
          <datasources>
            <datasource caption='输出' name='federated.05707dt02su0qz0zrnj3i10hen1s' />
          </datasources>
          <datasource-dependencies datasource='federated.05707dt02su0qz0zrnj3i10hen1s'>
            <column datatype='integer' name='[Count]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[LGA]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column datatype='string' name='[Offence category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Subcategory]' role='dimension' type='nominal' />
            <column-instance column='[Date]' derivation='Month' name='[mn:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[LGA]' derivation='None' name='[none:LGA:nk]' pivot='key' type='nominal' />
            <column-instance column='[Offence category]' derivation='None' name='[none:Offence category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Subcategory]' derivation='None' name='[none:Subcategory:nk]' pivot='key' type='nominal' />
            <column-instance column='[Count]' derivation='Sum' name='[sum:Count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.05707dt02su0qz0zrnj3i10hen1s].[none:LGA:nk]'>
            <groupfilter expression='[LGA] = &apos;Sydney&apos;' function='filter' user:ui-enumeration='inclusive' user:ui-pattern-include-all-when-empty='true' user:ui-pattern_text='Sydney' user:ui-pattern_type='exact-match'>
              <groupfilter from='&quot;Albury&quot;' function='range' level='[none:LGA:nk]' to='&quot;Yass Valley&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.05707dt02su0qz0zrnj3i10hen1s].[none:Offence category:nk]'>
            <groupfilter count='2' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Count])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Offence category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.05707dt02su0qz0zrnj3i10hen1s].[none:Subcategory:nk]'>
            <groupfilter count='2' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Count])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Subcategory:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.05707dt02su0qz0zrnj3i10hen1s].[yr:Date:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:Date:ok]' member='1999' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2000' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2001' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2002' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.05707dt02su0qz0zrnj3i10hen1s].[none:LGA:nk]</column>
            <column>[federated.05707dt02su0qz0zrnj3i10hen1s].[none:Offence category:nk]</column>
            <column>[federated.05707dt02su0qz0zrnj3i10hen1s].[none:Subcategory:nk]</column>
            <column>[federated.05707dt02su0qz0zrnj3i10hen1s].[yr:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <lod column='[federated.05707dt02su0qz0zrnj3i10hen1s].[sum:Count:qk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='font-size' value='1' />
                <format attr='color' value='#ffffff' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-color' value='#4e79a7' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.05707dt02su0qz0zrnj3i10hen1s].[sum:Count:qk]</rows>
        <cols>([federated.05707dt02su0qz0zrnj3i10hen1s].[none:Offence category:nk] / ([federated.05707dt02su0qz0zrnj3i10hen1s].[none:Subcategory:nk] / ([federated.05707dt02su0qz0zrnj3i10hen1s].[none:LGA:nk] / ([federated.05707dt02su0qz0zrnj3i10hen1s].[yr:Date:ok] / [federated.05707dt02su0qz0zrnj3i10hen1s].[mn:Date:ok]))))</cols>
      </table>
      <simple-id uuid='{3999028C-0A16-4134-AD3F-E4D2C54948CA}' />
    </worksheet>
    <worksheet name='Olypic games'>
      <table>
        <view>
          <datasources>
            <datasource caption='输出' name='federated.05707dt02su0qz0zrnj3i10hen1s' />
          </datasources>
          <datasource-dependencies datasource='federated.05707dt02su0qz0zrnj3i10hen1s'>
            <column datatype='integer' name='[Count]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[LGA]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column datatype='string' name='[Offence category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Subcategory]' role='dimension' type='nominal' />
            <column-instance column='[Date]' derivation='Month' name='[mn:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[LGA]' derivation='None' name='[none:LGA:nk]' pivot='key' type='nominal' />
            <column-instance column='[Offence category]' derivation='None' name='[none:Offence category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Subcategory]' derivation='None' name='[none:Subcategory:nk]' pivot='key' type='nominal' />
            <column-instance column='[Count]' derivation='Sum' name='[sum:Count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Month-Trunc' name='[tmn:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.05707dt02su0qz0zrnj3i10hen1s].[mn:Date:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[mn:Date:ok]' member='7' />
              <groupfilter function='member' level='[mn:Date:ok]' member='8' />
              <groupfilter function='member' level='[mn:Date:ok]' member='9' />
              <groupfilter function='member' level='[mn:Date:ok]' member='10' />
              <groupfilter function='member' level='[mn:Date:ok]' member='11' />
              <groupfilter function='member' level='[mn:Date:ok]' member='12' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.05707dt02su0qz0zrnj3i10hen1s].[none:LGA:nk]'>
            <groupfilter expression='STARTSWITH(LOWER([LGA]), LOWER(&apos;Sydney&apos;))' function='filter' user:ui-enumeration='inclusive' user:ui-pattern-include-all-when-empty='true' user:ui-pattern_text='Sydney' user:ui-pattern_type='starts-with'>
              <groupfilter from='&quot;Albury&quot;' function='range' level='[none:LGA:nk]' to='&quot;Yass Valley&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.05707dt02su0qz0zrnj3i10hen1s].[none:Offence category:nk]'>
            <groupfilter count='3' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Count])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Offence category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.05707dt02su0qz0zrnj3i10hen1s].[none:Subcategory:nk]'>
            <groupfilter count='3' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Count])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Subcategory:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.05707dt02su0qz0zrnj3i10hen1s].[yr:Date:ok]'>
            <groupfilter function='member' level='[yr:Date:ok]' member='2000' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.05707dt02su0qz0zrnj3i10hen1s].[none:LGA:nk]</column>
            <column>[federated.05707dt02su0qz0zrnj3i10hen1s].[yr:Date:ok]</column>
            <column>[federated.05707dt02su0qz0zrnj3i10hen1s].[mn:Date:ok]</column>
            <column>[federated.05707dt02su0qz0zrnj3i10hen1s].[none:Offence category:nk]</column>
            <column>[federated.05707dt02su0qz0zrnj3i10hen1s].[none:Subcategory:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.05707dt02su0qz0zrnj3i10hen1s].[none:LGA:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.05707dt02su0qz0zrnj3i10hen1s].[sum:Count:qk]</rows>
        <cols>(([federated.05707dt02su0qz0zrnj3i10hen1s].[none:Offence category:nk] / [federated.05707dt02su0qz0zrnj3i10hen1s].[none:Subcategory:nk]) * [federated.05707dt02su0qz0zrnj3i10hen1s].[tmn:Date:qk])</cols>
      </table>
      <simple-id uuid='{9D91D234-482C-4686-A78A-F8DCE19E5619}' />
    </worksheet>
    <worksheet name='Overall Seasonal Pattern'>
      <table>
        <view>
          <datasources>
            <datasource caption='输出' name='federated.05707dt02su0qz0zrnj3i10hen1s' />
          </datasources>
          <datasource-dependencies datasource='federated.05707dt02su0qz0zrnj3i10hen1s'>
            <column datatype='integer' name='[Count]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column-instance column='[Date]' derivation='Month' name='[mn:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Count]' derivation='Sum' name='[sum:Count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
        </panes>
        <rows>[federated.05707dt02su0qz0zrnj3i10hen1s].[sum:Count:qk]</rows>
        <cols>([federated.05707dt02su0qz0zrnj3i10hen1s].[yr:Date:ok] / [federated.05707dt02su0qz0zrnj3i10hen1s].[mn:Date:ok])</cols>
      </table>
      <simple-id uuid='{BB558B66-9C1D-4886-877B-968B081BEA2B}' />
    </worksheet>
    <worksheet name='Sexual offences pattern'>
      <table>
        <view>
          <datasources>
            <datasource caption='输出' name='federated.05707dt02su0qz0zrnj3i10hen1s' />
          </datasources>
          <datasource-dependencies datasource='federated.05707dt02su0qz0zrnj3i10hen1s'>
            <column datatype='integer' name='[Count]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Offence category]' role='dimension' type='nominal' />
            <column-instance column='[Date]' derivation='Month' name='[mn:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Offence category]' derivation='None' name='[none:Offence category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Count]' derivation='Sum' name='[sum:Count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.05707dt02su0qz0zrnj3i10hen1s].[none:Offence category:nk]'>
            <groupfilter function='member' level='[none:Offence category:nk]' member='&quot;Sexual offences&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.05707dt02su0qz0zrnj3i10hen1s].[none:Offence category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.05707dt02su0qz0zrnj3i10hen1s].[none:Offence category:nk] * [federated.05707dt02su0qz0zrnj3i10hen1s].[sum:Count:qk])</rows>
        <cols>([federated.05707dt02su0qz0zrnj3i10hen1s].[yr:Date:ok] / [federated.05707dt02su0qz0zrnj3i10hen1s].[mn:Date:ok])</cols>
      </table>
      <simple-id uuid='{E07D9101-B706-4F33-BE92-5E7BE4633233}' />
    </worksheet>
    <worksheet name='Sheet 13'>
      <table>
        <view>
          <datasources>
            <datasource caption='输出' name='federated.05707dt02su0qz0zrnj3i10hen1s' />
          </datasources>
          <datasource-dependencies datasource='federated.05707dt02su0qz0zrnj3i10hen1s'>
            <column datatype='integer' name='[Count]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Offence category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Subcategory]' role='dimension' type='nominal' />
            <column-instance column='[Offence category]' derivation='None' name='[none:Offence category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Subcategory]' derivation='None' name='[none:Subcategory:nk]' pivot='key' type='nominal' />
            <column-instance column='[Count]' derivation='Sum' name='[sum:Count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.05707dt02su0qz0zrnj3i10hen1s].[none:Offence category:nk]'>
            <groupfilter function='member' level='[none:Offence category:nk]' member='&quot;Theft&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.05707dt02su0qz0zrnj3i10hen1s].[none:Subcategory:nk]'>
            <groupfilter function='member' level='[none:Subcategory:nk]' member='&quot;Fraud&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.05707dt02su0qz0zrnj3i10hen1s].[yr:Date:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:Date:ok]' member='2012' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2013' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2014' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2015' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2016' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2017' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.05707dt02su0qz0zrnj3i10hen1s].[none:Offence category:nk]</column>
            <column>[federated.05707dt02su0qz0zrnj3i10hen1s].[yr:Date:ok]</column>
            <column>[federated.05707dt02su0qz0zrnj3i10hen1s].[none:Subcategory:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.05707dt02su0qz0zrnj3i10hen1s].[none:Subcategory:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.05707dt02su0qz0zrnj3i10hen1s].[none:Offence category:nk] * [federated.05707dt02su0qz0zrnj3i10hen1s].[sum:Count:qk])</rows>
        <cols>[federated.05707dt02su0qz0zrnj3i10hen1s].[yr:Date:ok]</cols>
      </table>
      <simple-id uuid='{85468B80-9134-4DAA-88E5-70776B17BF7E}' />
    </worksheet>
    <worksheet name='Top5 towns quaterly pattern'>
      <table>
        <view>
          <datasources>
            <datasource caption='输出' name='federated.05707dt02su0qz0zrnj3i10hen1s' />
          </datasources>
          <datasource-dependencies datasource='federated.05707dt02su0qz0zrnj3i10hen1s'>
            <column datatype='integer' name='[Count]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[LGA]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column datatype='string' name='[Offence category]' role='dimension' type='nominal' />
            <column-instance column='[Date]' derivation='Month' name='[mn:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[LGA]' derivation='None' name='[none:LGA:nk]' pivot='key' type='nominal' />
            <column-instance column='[Offence category]' derivation='None' name='[none:Offence category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Quarter' name='[qr:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Count]' derivation='Sum' name='[sum:Count:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.05707dt02su0qz0zrnj3i10hen1s].[none:LGA:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Count])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:LGA:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.05707dt02su0qz0zrnj3i10hen1s].[none:Offence category:nk]'>
            <groupfilter count='3' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Count])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Offence category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.05707dt02su0qz0zrnj3i10hen1s].[none:LGA:nk]</column>
            <column>[federated.05707dt02su0qz0zrnj3i10hen1s].[none:Offence category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.05707dt02su0qz0zrnj3i10hen1s].[mn:Date:ok]' value='55' />
            <format attr='width' field='[federated.05707dt02su0qz0zrnj3i10hen1s].[qr:Date:ok]' value='55' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.05707dt02su0qz0zrnj3i10hen1s].[none:Offence category:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.05707dt02su0qz0zrnj3i10hen1s].[sum:Count:qk]</rows>
        <cols>([federated.05707dt02su0qz0zrnj3i10hen1s].[none:LGA:nk] / [federated.05707dt02su0qz0zrnj3i10hen1s].[qr:Date:ok])</cols>
      </table>
      <simple-id uuid='{BF636123-792F-4995-A3BA-F5C218C0F7FB}' />
    </worksheet>
    <worksheet name='Transport regulatory offences pattern'>
      <table>
        <view>
          <datasources>
            <datasource caption='输出' name='federated.05707dt02su0qz0zrnj3i10hen1s' />
          </datasources>
          <datasource-dependencies datasource='federated.05707dt02su0qz0zrnj3i10hen1s'>
            <column datatype='integer' name='[Count]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Offence category]' role='dimension' type='nominal' />
            <column-instance column='[Offence category]' derivation='None' name='[none:Offence category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Count]' derivation='Sum' name='[sum:Count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.05707dt02su0qz0zrnj3i10hen1s].[none:Offence category:nk]'>
            <groupfilter function='member' level='[none:Offence category:nk]' member='&quot;Transport regulatory offences&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.05707dt02su0qz0zrnj3i10hen1s].[none:Offence category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
        </panes>
        <rows>([federated.05707dt02su0qz0zrnj3i10hen1s].[none:Offence category:nk] * [federated.05707dt02su0qz0zrnj3i10hen1s].[sum:Count:qk])</rows>
        <cols>[federated.05707dt02su0qz0zrnj3i10hen1s].[yr:Date:ok]</cols>
      </table>
      <simple-id uuid='{9410C037-3660-4F66-A7F4-FBCD7D98E745}' />
    </worksheet>
    <worksheet name='drug vs theft'>
      <table>
        <view>
          <datasources>
            <datasource caption='输出' name='federated.05707dt02su0qz0zrnj3i10hen1s' />
          </datasources>
          <datasource-dependencies datasource='federated.05707dt02su0qz0zrnj3i10hen1s'>
            <column datatype='integer' name='[Count]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Offence category]' role='dimension' type='nominal' />
            <column-instance column='[Offence category]' derivation='None' name='[none:Offence category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Quarter' name='[qr:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Count]' derivation='Sum' name='[sum:Count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.05707dt02su0qz0zrnj3i10hen1s].[none:Offence category:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Offence category:nk]' member='&quot;Drug offences&quot;' />
              <groupfilter function='member' level='[none:Offence category:nk]' member='&quot;Theft&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.05707dt02su0qz0zrnj3i10hen1s].[none:Offence category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.05707dt02su0qz0zrnj3i10hen1s].[none:Offence category:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.05707dt02su0qz0zrnj3i10hen1s].[sum:Count:qk]</rows>
        <cols>([federated.05707dt02su0qz0zrnj3i10hen1s].[yr:Date:ok] / [federated.05707dt02su0qz0zrnj3i10hen1s].[qr:Date:ok])</cols>
      </table>
      <simple-id uuid='{E540237A-635E-4D81-8542-5FAF5306B75D}' />
    </worksheet>
    <worksheet name='liquor offences'>
      <table>
        <view>
          <datasources>
            <datasource caption='输出' name='federated.05707dt02su0qz0zrnj3i10hen1s' />
          </datasources>
          <datasource-dependencies datasource='federated.05707dt02su0qz0zrnj3i10hen1s'>
            <column datatype='integer' name='[Count]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Offence category]' role='dimension' type='nominal' />
            <column-instance column='[Offence category]' derivation='None' name='[none:Offence category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Quarter' name='[qr:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Count]' derivation='Sum' name='[sum:Count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.05707dt02su0qz0zrnj3i10hen1s].[none:Offence category:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Offence category:nk]' member='&quot;Liquor offences&quot;' />
              <groupfilter function='member' level='[none:Offence category:nk]' member='&quot;Sexual offences&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.05707dt02su0qz0zrnj3i10hen1s].[none:Offence category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.05707dt02su0qz0zrnj3i10hen1s].[qr:Date:ok]' value='28' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.05707dt02su0qz0zrnj3i10hen1s].[none:Offence category:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.05707dt02su0qz0zrnj3i10hen1s].[sum:Count:qk]</rows>
        <cols>([federated.05707dt02su0qz0zrnj3i10hen1s].[yr:Date:ok] / [federated.05707dt02su0qz0zrnj3i10hen1s].[qr:Date:ok])</cols>
      </table>
      <simple-id uuid='{5C1A69B6-9360-466D-8798-BBFA36D2366A}' />
    </worksheet>
    <worksheet name='theft breakdown'>
      <table>
        <view>
          <datasources>
            <datasource caption='输出' name='federated.05707dt02su0qz0zrnj3i10hen1s' />
          </datasources>
          <datasource-dependencies datasource='federated.05707dt02su0qz0zrnj3i10hen1s'>
            <column datatype='integer' name='[Count]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[LGA]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column datatype='string' name='[Offence category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Subcategory]' role='dimension' type='nominal' />
            <column-instance column='[Date]' derivation='Month' name='[mn:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[LGA]' derivation='None' name='[none:LGA:nk]' pivot='key' type='nominal' />
            <column-instance column='[Offence category]' derivation='None' name='[none:Offence category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Subcategory]' derivation='None' name='[none:Subcategory:nk]' pivot='key' type='nominal' />
            <column-instance column='[Count]' derivation='Sum' name='[sum:Count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.05707dt02su0qz0zrnj3i10hen1s].[none:LGA:nk]'>
            <groupfilter count='3' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Count])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:LGA:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.05707dt02su0qz0zrnj3i10hen1s].[none:Offence category:nk]'>
            <groupfilter count='1' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Count])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Offence category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.05707dt02su0qz0zrnj3i10hen1s].[none:Subcategory:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Count])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:Subcategory:nk]' member='&quot;Break and enter dwelling&quot;' />
                  <groupfilter function='member' level='[none:Subcategory:nk]' member='&quot;Break and enter non-dwelling&quot;' />
                  <groupfilter function='member' level='[none:Subcategory:nk]' member='&quot;Fraud&quot;' />
                  <groupfilter function='member' level='[none:Subcategory:nk]' member='&quot;Motor vehicle theft&quot;' />
                  <groupfilter function='member' level='[none:Subcategory:nk]' member='&quot;Steal from motor vehicle&quot;' />
                  <groupfilter function='member' level='[none:Subcategory:nk]' member='&quot;Steal from retail store&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.05707dt02su0qz0zrnj3i10hen1s].[none:Offence category:nk]</column>
            <column>[federated.05707dt02su0qz0zrnj3i10hen1s].[none:Subcategory:nk]</column>
            <column>[federated.05707dt02su0qz0zrnj3i10hen1s].[none:LGA:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.05707dt02su0qz0zrnj3i10hen1s].[mn:Date:ok]' value='48' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.05707dt02su0qz0zrnj3i10hen1s].[none:Subcategory:nk]' />
              <lod column='[federated.05707dt02su0qz0zrnj3i10hen1s].[sum:Count:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='589' />
                <format attr='maxheight' value='589' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.05707dt02su0qz0zrnj3i10hen1s].[sum:Count:qk]</rows>
        <cols>([federated.05707dt02su0qz0zrnj3i10hen1s].[yr:Date:ok] / [federated.05707dt02su0qz0zrnj3i10hen1s].[mn:Date:ok])</cols>
      </table>
      <simple-id uuid='{0A3AB317-383D-40AE-AB8E-DD9C6B9CC88B}' />
    </worksheet>
    <worksheet name='theft from motor historical pattern'>
      <table>
        <view>
          <datasources>
            <datasource caption='输出' name='federated.05707dt02su0qz0zrnj3i10hen1s' />
          </datasources>
          <datasource-dependencies datasource='federated.05707dt02su0qz0zrnj3i10hen1s'>
            <column datatype='integer' name='[Count]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[LGA]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column datatype='string' name='[Offence category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Subcategory]' role='dimension' type='nominal' />
            <column-instance column='[Date]' derivation='Month' name='[mn:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[LGA]' derivation='None' name='[none:LGA:nk]' pivot='key' type='nominal' />
            <column-instance column='[Offence category]' derivation='None' name='[none:Offence category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Subcategory]' derivation='None' name='[none:Subcategory:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Quarter' name='[qr:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Count]' derivation='Sum' name='[sum:Count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.05707dt02su0qz0zrnj3i10hen1s].[none:LGA:nk]'>
            <groupfilter expression='[LGA] = &apos;Sydney&apos;' function='filter' user:ui-enumeration='inclusive' user:ui-pattern-include-all-when-empty='true' user:ui-pattern_text='Sydney' user:ui-pattern_type='exact-match'>
              <groupfilter from='&quot;Albury&quot;' function='range' level='[none:LGA:nk]' to='&quot;Yass Valley&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.05707dt02su0qz0zrnj3i10hen1s].[none:Offence category:nk]'>
            <groupfilter count='1' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Count])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Offence category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.05707dt02su0qz0zrnj3i10hen1s].[none:Subcategory:nk]'>
            <groupfilter count='2' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Count])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Subcategory:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.05707dt02su0qz0zrnj3i10hen1s].[none:LGA:nk]</column>
            <column>[federated.05707dt02su0qz0zrnj3i10hen1s].[none:Offence category:nk]</column>
            <column>[federated.05707dt02su0qz0zrnj3i10hen1s].[none:Subcategory:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.05707dt02su0qz0zrnj3i10hen1s].[qr:Date:ok]' value='32' />
            <format attr='width' field='[federated.05707dt02su0qz0zrnj3i10hen1s].[mn:Date:ok]' value='32' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>(([federated.05707dt02su0qz0zrnj3i10hen1s].[none:LGA:nk] / [federated.05707dt02su0qz0zrnj3i10hen1s].[none:Subcategory:nk]) * [federated.05707dt02su0qz0zrnj3i10hen1s].[sum:Count:qk])</rows>
        <cols>([federated.05707dt02su0qz0zrnj3i10hen1s].[yr:Date:ok] / [federated.05707dt02su0qz0zrnj3i10hen1s].[mn:Date:ok])</cols>
      </table>
      <simple-id uuid='{EF5B3A9E-BE7B-49EA-93ED-A5CB36FE9C00}' />
    </worksheet>
    <worksheet name='top3 Quaterly pattern'>
      <table>
        <view>
          <datasources>
            <datasource caption='输出' name='federated.05707dt02su0qz0zrnj3i10hen1s' />
          </datasources>
          <datasource-dependencies datasource='federated.05707dt02su0qz0zrnj3i10hen1s'>
            <column datatype='integer' name='[Count]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Offence category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Subcategory]' role='dimension' type='nominal' />
            <column-instance column='[Offence category]' derivation='None' name='[none:Offence category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Subcategory]' derivation='None' name='[none:Subcategory:nk]' pivot='key' type='nominal' />
            <column-instance column='[Count]' derivation='Sum' name='[sum:Count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Quarter-Trunc' name='[tqr:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.05707dt02su0qz0zrnj3i10hen1s].[none:Offence category:nk]'>
            <groupfilter count='3' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Count])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Offence category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.05707dt02su0qz0zrnj3i10hen1s].[none:Subcategory:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Count])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Subcategory:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.05707dt02su0qz0zrnj3i10hen1s].[none:Offence category:nk]</column>
            <column>[federated.05707dt02su0qz0zrnj3i10hen1s].[none:Subcategory:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
        </panes>
        <rows>(([federated.05707dt02su0qz0zrnj3i10hen1s].[none:Offence category:nk] / [federated.05707dt02su0qz0zrnj3i10hen1s].[none:Subcategory:nk]) * [federated.05707dt02su0qz0zrnj3i10hen1s].[sum:Count:qk])</rows>
        <cols>([federated.05707dt02su0qz0zrnj3i10hen1s].[yr:Date:ok] / [federated.05707dt02su0qz0zrnj3i10hen1s].[tqr:Date:ok])</cols>
      </table>
      <simple-id uuid='{96050DDB-4FC9-46AD-8668-0EBE4D25F175}' />
    </worksheet>
    <worksheet name='transport regulatory'>
      <table>
        <view>
          <datasources>
            <datasource caption='输出' name='federated.05707dt02su0qz0zrnj3i10hen1s' />
          </datasources>
          <datasource-dependencies datasource='federated.05707dt02su0qz0zrnj3i10hen1s'>
            <column datatype='integer' name='[Count]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[LGA]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column datatype='string' name='[Offence category]' role='dimension' type='nominal' />
            <column-instance column='[LGA]' derivation='None' name='[none:LGA:nk]' pivot='key' type='nominal' />
            <column-instance column='[Offence category]' derivation='None' name='[none:Offence category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Quarter' name='[qr:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Count]' derivation='Sum' name='[sum:Count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.05707dt02su0qz0zrnj3i10hen1s].[none:LGA:nk]'>
            <groupfilter count='3' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Count])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:LGA:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.05707dt02su0qz0zrnj3i10hen1s].[none:Offence category:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Count])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:Offence category:nk]' member='&quot;Theft&quot;' />
                  <groupfilter function='member' level='[none:Offence category:nk]' member='&quot;Transport regulatory offences&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.05707dt02su0qz0zrnj3i10hen1s].[none:Offence category:nk]</column>
            <column>[federated.05707dt02su0qz0zrnj3i10hen1s].[none:LGA:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.05707dt02su0qz0zrnj3i10hen1s].[qr:Date:ok]' value='42' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.05707dt02su0qz0zrnj3i10hen1s].[none:Offence category:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.05707dt02su0qz0zrnj3i10hen1s].[none:LGA:nk] * [federated.05707dt02su0qz0zrnj3i10hen1s].[sum:Count:qk])</rows>
        <cols>([federated.05707dt02su0qz0zrnj3i10hen1s].[yr:Date:ok] / [federated.05707dt02su0qz0zrnj3i10hen1s].[qr:Date:ok])</cols>
      </table>
      <simple-id uuid='{AE13D615-B8E3-48BD-932F-345124564973}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='top3 Quaterly pattern'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card AVG='true' KURTOSIS='false' MAX='true' MEDIAN='true' MIN='true' QUART1='false' QUART3='false' SKEWNESS='false' STDEV='false' SUM='true' type='summary' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.05707dt02su0qz0zrnj3i10hen1s].[none:Date:nk]</field>
            <field>[federated.05707dt02su0qz0zrnj3i10hen1s].[none:Offence category:nk]</field>
            <field>[federated.05707dt02su0qz0zrnj3i10hen1s].[none:Subcategory:nk]</field>
            <field>[federated.05707dt02su0qz0zrnj3i10hen1s].[tqr:Date:ok]</field>
            <field>[federated.05707dt02su0qz0zrnj3i10hen1s].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2CD5E821-138C-415B-9E87-9D8853C48E18}' />
    </window>
    <window class='worksheet' name='Overall Seasonal Pattern'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.05707dt02su0qz0zrnj3i10hen1s].[qr:Date:ok]</field>
            <field>[federated.05707dt02su0qz0zrnj3i10hen1s].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{016A5668-6C3B-4BC3-9B78-E65F297466F9}' />
    </window>
    <window class='worksheet' name='Top5 towns quaterly pattern'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.05707dt02su0qz0zrnj3i10hen1s].[none:Offence category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.05707dt02su0qz0zrnj3i10hen1s].[none:LGA:nk]</field>
            <field>[federated.05707dt02su0qz0zrnj3i10hen1s].[none:Offence category:nk]</field>
            <field>[federated.05707dt02su0qz0zrnj3i10hen1s].[qr:Date:ok]</field>
            <field>[federated.05707dt02su0qz0zrnj3i10hen1s].[qr:Date:qk]</field>
            <field>[federated.05707dt02su0qz0zrnj3i10hen1s].[sum:Count:qk]</field>
            <field>[federated.05707dt02su0qz0zrnj3i10hen1s].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A46F08C6-5122-43E1-94CE-B3B5F6AE38AE}' />
    </window>
    <window class='worksheet' name='transport regulatory'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.05707dt02su0qz0zrnj3i10hen1s].[none:Offence category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.05707dt02su0qz0zrnj3i10hen1s].[:Measure Names]</field>
            <field>[federated.05707dt02su0qz0zrnj3i10hen1s].[none:LGA:nk]</field>
            <field>[federated.05707dt02su0qz0zrnj3i10hen1s].[none:Offence category:nk]</field>
            <field>[federated.05707dt02su0qz0zrnj3i10hen1s].[none:Subcategory:nk]</field>
            <field>[federated.05707dt02su0qz0zrnj3i10hen1s].[tqr:Date:ok]</field>
            <field>[federated.05707dt02su0qz0zrnj3i10hen1s].[tqr:Date:qk]</field>
            <field>[federated.05707dt02su0qz0zrnj3i10hen1s].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{478B3E41-5429-4381-A8D1-2C96FD186D82}' />
    </window>
    <window class='worksheet' name='liquor offences'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.05707dt02su0qz0zrnj3i10hen1s].[none:Offence category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.05707dt02su0qz0zrnj3i10hen1s].[none:LGA:nk]</field>
            <field>[federated.05707dt02su0qz0zrnj3i10hen1s].[none:Offence category:nk]</field>
            <field>[federated.05707dt02su0qz0zrnj3i10hen1s].[qr:Date:ok]</field>
            <field>[federated.05707dt02su0qz0zrnj3i10hen1s].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{95B3103B-2BCF-4013-9824-03BB06166CFB}' />
    </window>
    <window class='worksheet' name='Olypic games'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.05707dt02su0qz0zrnj3i10hen1s].[none:LGA:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.05707dt02su0qz0zrnj3i10hen1s].[none:LGA:nk]</field>
            <field>[federated.05707dt02su0qz0zrnj3i10hen1s].[none:Offence category:nk]</field>
            <field>[federated.05707dt02su0qz0zrnj3i10hen1s].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{87958D76-2181-4F86-8D10-5EAFD8A2E6C5}' />
    </window>
    <window class='worksheet' name='OG2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.05707dt02su0qz0zrnj3i10hen1s].[none:LGA:nk]</field>
            <field>[federated.05707dt02su0qz0zrnj3i10hen1s].[none:Offence category:nk]</field>
            <field>[federated.05707dt02su0qz0zrnj3i10hen1s].[none:Subcategory:nk]</field>
            <field>[federated.05707dt02su0qz0zrnj3i10hen1s].[qr:Date:ok]</field>
            <field>[federated.05707dt02su0qz0zrnj3i10hen1s].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B46C5C2D-D020-46F3-A600-FCBBD99158CF}' />
    </window>
    <window class='worksheet' name='theft breakdown'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.05707dt02su0qz0zrnj3i10hen1s].[none:Subcategory:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.05707dt02su0qz0zrnj3i10hen1s].[none:LGA:nk]</field>
            <field>[federated.05707dt02su0qz0zrnj3i10hen1s].[none:Subcategory:nk]</field>
            <field>[federated.05707dt02su0qz0zrnj3i10hen1s].[qr:Date:ok]</field>
            <field>[federated.05707dt02su0qz0zrnj3i10hen1s].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CFB1CCC2-5070-4153-A985-347190A77A20}' />
    </window>
    <window class='worksheet' name='theft from motor historical pattern'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.05707dt02su0qz0zrnj3i10hen1s].[mn:Date:ok]</field>
            <field>[federated.05707dt02su0qz0zrnj3i10hen1s].[none:LGA:nk]</field>
            <field>[federated.05707dt02su0qz0zrnj3i10hen1s].[none:Offence category:nk]</field>
            <field>[federated.05707dt02su0qz0zrnj3i10hen1s].[none:Subcategory:nk]</field>
            <field>[federated.05707dt02su0qz0zrnj3i10hen1s].[qr:Date:ok]</field>
            <field>[federated.05707dt02su0qz0zrnj3i10hen1s].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A5F13B83-A5A3-4153-BC71-0AA28DA2D969}' />
    </window>
    <window class='worksheet' name='Sexual offences pattern'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.05707dt02su0qz0zrnj3i10hen1s].[none:Offence category:nk]</field>
            <field>[federated.05707dt02su0qz0zrnj3i10hen1s].[qr:Date:ok]</field>
            <field>[federated.05707dt02su0qz0zrnj3i10hen1s].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{808D150E-9E23-4EC9-8F39-B79AD6240149}' />
    </window>
    <window class='worksheet' maximized='true' name='Transport regulatory offences pattern'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.05707dt02su0qz0zrnj3i10hen1s].[none:Offence category:nk]</field>
            <field>[federated.05707dt02su0qz0zrnj3i10hen1s].[qr:Date:ok]</field>
            <field>[federated.05707dt02su0qz0zrnj3i10hen1s].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D15F8F9B-299F-43CA-AAFE-99299C442640}' />
    </window>
    <window class='worksheet' name='drug vs theft'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.05707dt02su0qz0zrnj3i10hen1s].[none:Offence category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.05707dt02su0qz0zrnj3i10hen1s].[none:Offence category:nk]</field>
            <field>[federated.05707dt02su0qz0zrnj3i10hen1s].[none:Subcategory:nk]</field>
            <field>[federated.05707dt02su0qz0zrnj3i10hen1s].[qr:Date:ok]</field>
            <field>[federated.05707dt02su0qz0zrnj3i10hen1s].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F68565DA-77BD-4A8C-BA0C-18BFD342476E}' />
    </window>
    <window class='worksheet' name='Sheet 13'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.05707dt02su0qz0zrnj3i10hen1s].[none:Offence category:nk]</field>
            <field>[federated.05707dt02su0qz0zrnj3i10hen1s].[none:Subcategory:nk]</field>
            <field>[federated.05707dt02su0qz0zrnj3i10hen1s].[qr:Date:ok]</field>
            <field>[federated.05707dt02su0qz0zrnj3i10hen1s].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{610DA5FC-4E3C-46D5-A493-280DB1DDC7AE}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='OG2' width='192'>
      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
      2vJwB/4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Olypic games' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Overall Seasonal Pattern' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sexual offences pattern' width='192'>
      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
      pcmyCTF8wqIAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 13' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAASs0lEQVR4nO3dWWwc933A8e/MXtwll9cub1IkxfuWZUuyEtmy7CpxEiSoHSdNmgst0vah
      TR8K9CVtUQQt2rcGQdMLTZu2cQrkam0nUWLJUSJYsg7qIkVKvE+J1x689t6dmT4oUhNZli0e
      2l3O7wMIBgRr9i9ov5z//Hfmv4phGAZCmJCiKIqa7kEIkU4SgDA1CUCYmjXdAxDbR0vFWZxf
      QrE7KS3xYFGVdA8p48gZYAcLBYb47++cYKz/DP9z/AKGYZBKpdB1nbHe1zk/6kc3DDRNI6Vp
      mHE9RM4AO1xJVT1PHX2af/nqP+DfW8b53kFyi3JZHbjEqLJKibqHt966iB4L8f4XPkeD15nu
      IT9ScgYwAUPX0C1WVhdn8K3G8OtuGhvq2HPwCPiHmfRHyC8uQtH1dA/1kZMAdjSV6RuX+cH3
      vkvzk8+iLQdIKnacOTZKa+oYPPMTDG8zhWoMq9OF3WK+t4MiH4QJs1IURbl7DWAYBoFAIJ3j
      2VaapmGxWNI9DJFhTHMG8Pv9eL3edA9DZBC5FUKYngQgTE0CEKYmAQhTkwCEqUkAwtQkAGFq
      EoAwNQlAmJoEIExNngcQ78i3EqZ/fIlKbx5lRXkU5++8ZwUkAPE20XiSn12a5MfnRnG77ARW
      oygKVHjcNFUX01FXSkNVEXlOO9Ysv4VaboYTd+m6wcDkEv/50z5iiRSf+2A3+1urAJhZXGX0
      VpD+8UXGbwUJrEWpKy+kZZeH1l1eOupKKMjLSfPf4OEoiqJIAALDMFhaDvPyiWv0jy/ysfc3
      8+Enm3A6bPf9f1Oajn81ytC0jxvTfkZuBgiuRSlyO+msL6GtroSGyiJKCnMz+gwhAQhiiRSv
      nh7iJ+fH2NNYziePdFDpdT/UMZIpDf9qhMn5FYam/VwdWyAUTeB2OaivKKS7oYzWXV6K8504
      bBYUJTN2p5AATMwwDM4O3uQ7JwexWlQ++4EuehrLUbfozelfiTA+F2Rg0sfwjJ/pxVWK8500
      VBbR3VBGR10JVSX5W/JaGyUBmNQt3xovn7jGxNwyHznYxAf3N+Cwbd96iKbrROMpxueWGZxc
      4vqUj5u+NcqL83jpcDs9jWXYrI/+aT0JwGSSKY2rowt8+41r7Cor4Hc/9BiF7kd/4arpOiuh
      OMd7x/nZpQlKC3P5xJEOOutLHmkIWR3A9avnWYloFJXXUu+1c/HqEDkFJfS0VDMXDFNZYGV0
      Lkp7UzWQGQEMz/g51TdNY1UxLTWeRzoFWAiE+MaPLzM04+cPX9jHwY6aR/baD7ISinG8d5wf
      vjVCbVkBLzzdxuPNFY/ktbM4AIM3T56gqq6FyppqJvsvUdX9BIsjfRSUVOJbixDzzdO8dz9u
      x+1Te7oDmPOv85X/OEVTdTGLwRCLy2FUVaG7oYzO+lKaqz2UFefed+VlM9Yicb57cpCfX5ni
      qe5dfOq5TgpyHRlzIQq3r0fWowmOnR3lxMUJSotyeemZdnoayrZ1FSmrA1hbDhKJhBie8pHv
      tNC99zHmx4dQnfn09fXiKqzn6Se7MAwDXdcJBoMUFRWlZbSJpMbffe88OXYrX3pxH4ZhsBaO
      M+tbY3g2yNC0n7lACKtFodrrpq3WS1utl0qvG1eObUMXpsmUzpv907xyeoQKr5sXDjXTXO1B
      zfD9QZfXo5y4NMXJy1OUFbl44akWOutLtyUEu92epQFoCWYXglSU5HP6bB+1HhtqRSuBsT52
      N7dwKxDGFfOhe5toKC8A0ncGMAyDV04P8cbFSf7m9559xw+LwrEEk3MrDE75uDHtY+xWEJvF
      Qk1pPj2N5TTXFNNU7SHH/uCLVcMwGJ4N8J2Tg8z51/nNp1r5wL7dWNTMXY+/n+B6lNcvjHPs
      7Cj1FYW8eLiNPY3lW/oa2XsGMAwCC9OMzvho696D2w7DA/3kVTRSVZzDaiRJodvF/MISFRXl
      KKQvgMHJJf725dP82eefoq225D39GcMw0DSDWd8qg5M+rk/5mJhfZnk9RmNVMe11XpprPNSW
      FVJS6Lo7nfGthDl2bpTjvRM8v7+BF59uI9dp386/3ra6MzX60VsjvHFxgnJPHp94poPu3aVY
      tuCMkL0BbEA6AgiuRfnLb/6CI4/V8cJTrRuedxuGQTSeYnk9Sv/EIsMzAUZmA0QTKfJdDrob
      SslzOjhxcZwqbz5feL6H+orCjJrnb1ZgLcLJy1McvzBGhdfNxw+301FXsqmpkQSwjTRd56vf
      PUc4luTLnz205ct7KU1nzr/OxNwyQzN+AqsRju5rYG9zRUbffrBZa+E4Jy7+ctWovJCXDrfT
      tbt0Q8eSALbRa2eG+cn5Mf76i0fw5Lu29bXu/BPupJ/4D2IYBvGkxmtnhnn9wjjeAhe/9WwH
      exrLH+oiXwLYJqM3A3zlm6f400+/j54tvnATv241FOONS5McOzd6+xrhcDudu9/bqpEEsA1C
      0QR/8W8/Z19LJZ96rjPjlx13itVf+UDtt4928fz+xnf9MxLAFtN0na99/zxr4Th//vmnd/Rc
      PFPFEimAd10uBtkcd8u9cXGS4ZkAf/Cxx+XNnyY5dut7evPfIf9KW+Smb41vHe/jdz60hwrP
      w91PL9JHAtgC0XiSr33/PL/x+G72t1elezjiIUgAm6TrBv/1ej+qovDp5zq37IES8WhIAJt0
      dnCWs4Oz/NGL+3A8xNxTZAYJYBNu+df492NX+cLzPdSUFqR7OGIDJIANisaT/OP/XmR/WyWH
      e+rSPRyxQRLABmi6zg9O3SCWSPGZo93yYVcWkwA24PLIAicuTvClj+8nL4tvNxYSwENbDIb4
      1x9e4jNHu6grL0z3cMQmSQAPIZnS+JfXLtGyy8Oze+vTPRyxBSSA90g3DF47M8JcYJ3f/6jc
      6rBTZO3CtaGnuHrqRySqD9Ga6+PMgA+Pt5Duphqm/SGq3AYTfuhp3bUlrzcwscRrZ4b58mcP
      4XY5tuSYIv2yNAAD38wY7rIafLrBij+IarfiKSnDZoFYNMz1+WV69h/gV2923eiNryuhGN/4
      0WU++r5mmms8Gz6OyDxZGUAqusrZvhHqvA5uRnUef+YgtRaFvgtn8Dma8M1N4XCVYbMod7dF
      0XWdVCr10K+laTr/9Eov5Z48PnygYUPHEJkrKwOwONwcPfocxso0y4F8AnOTRHUroYROtUWl
      sq6NUmuUwfE5uhqrsKoqqqpisz3cplOGYfDT3hFml9b5qy8eweWUqc9Ok5UBKKoFlysX7A3s
      K7aQY9VYWvTRvucJCnPtuPIKcDps5KyHN/U6w7MBfnDqBn/yyYN4C7b3uV6RHlkZwF1WB7lW
      ACsVVdV3f/vOD2q3O2/Dh14JxfjnVy9y9InddDeUbW6cImPJWt596LrBN49dwVvg4qVn2tM9
      HLGNJID7+PmVKa5P+fniR/Zu6775Iv0kgPuwWhT++KX9lHs2PoUS2UF2hRCmJbtCCNOTAISp
      SQDC1CQAYWoSgDA1CUCYmgQgTE0CEKYmAQhTkwCEqUkAwtQkAGFqWR1APBomltAwDJ21lWUi
      8SSGrpFIpsDQicXi6R6iyHBZe7O7riXoe/MYyV2Hac7xMxZIkYqG2dvdwtTSOqX2KIvJAjob
      KtI9VJHBsjQAg5mRQWqaO5iKK8wFYjzx+F7mR6+zFo7jm59i2ZrHwSdb0XX97s4QsqODuFdW
      BpCKLHNtdBaPy2AyHqTF40DTb7/JFUUh151PIhQnpenYLbd3blYUBVXN6hmf2AbZ/UDM8gRn
      fW7a8la5NDyHxebgwJ5mJhbWqC1QuT4fZV93MwryQIx4O/meYGFq8kSYMD0JQJiaBCBMTQIQ
      piYBCFOTAISpSQDC1CQAYWoSgDA1CUCYmgQgTE0CEKYmAQhTkwCEqUkAwtQkAGFqEoAwtSwN
      wCAwP8OVq32shBMko6v0Xb7M1cFh4ok4a6EIGCl8/uV0D1RkuKx8KB4MNNVBS9Nuei9foq06
      F2dFI7uKHVhSEWYX1shNBDA8DZSke6gio2VpACoua4reC70U17SgqOssjg+wMGnjia4GZkb7
      yS3exaG2AnRdv/srmUyme+Aiw2T1Q/GpWIhzF66x79ABHKrK+MAVHJ4yVkMxwou3aN13kHzH
      7cbloXhxL0VRlOw8A2hx+q5cJZzQyCn0EpgZYfJWAF3N4Yn6PBIphea9nQyOT9HT3oiS7vGK
      jJXVZ4CHIWcAcS/ZFkWYngQgTE0CEKYmAQhTkwCEqUkAwtQkAGFqEoAwNQlAmJoEIExNAhCm
      JgEIU5MAhKlJAMLUJABhahKAMDUJQJhalgZgMDt2nbNnzzKzuEwqHuJK73lGpubRElEWAyvo
      yTBTs4vpHqjIcNn5TDAGxeW1VNXbOXO2l4TbRnlLD/6xPlbdVvzLEYLTCxQ3dqd7oCLDZWkA
      KkZ8hVPnrlFQ00ko7KM+PwetoIBYPMnMyFVcxfW05TtlWxTxQNkZgKFhcXk5/MyznDtzgcJ8
      B8FwkrX1dUoLPOxq7oHleRZWo5QXOFFVFVVVsdls6R65yDBZGoDO7PgN/GtRSuoaqS110td3
      EZenisL8XBKGhfLaMsZnlygrqJVtUcQ7km1RhGll9LYoM5MjJDTQU3Emp2bSPRyxQ2XkFCi0
      OM63X/4WVbs7sekh8uv2U1+X7lGJnSgjA8gpquS5I4eJGk6crlzqdtele0hih8rIAKx2J8lw
      kKWIE6dtmdyiMkqL3OkeltiBMjIAgByHi3xbAQUuG7lOe7qHI3aojL0Irt7dQr7TimEYYIp1
      KpEO9z0DTI/0M3HTh9XhorG1AVVzUlb69inImu8WQ7MBOloasDmc2K1b19PS7CjnLgyjp6K0
      aAXUVXq27NhC3PGOnwOM9F3B09RBnrLM5QszWPMcdHV3EPbNMrGwRmtLPcdfe5WKpnbi8+OE
      nOUcet9BilxbM6tKJRMkUxpafJWLA7M8c2jfpo4nnwOIe73HL8jQURz51HutzM7PMnC+l6Ii
      N+NzXqoamtj/+GMsjBkkPV1b9uYHCK0GWAquY6QS1DU0bNlxhfhV72HOolJYVIjNZsdmteMt
      LaWusYUKz/9PiWw2O/OzU0QS+pYNLByc48Tx4xz/2S8IJ+QiQGyPd5wCxaNRLI4cVFIkkwpW
      VUdTVPR4hOBqBE9JCVoyjtPpxNBT+Hw+Cjzl5Ni25jrg1PFXaHvyQ7gJcPLsOB/54FObOp5M
      gcS9FEVRMvZeoOWbQ7z6xjkMXeXIxz5OnTd3U8eTAMS9MjaAoWvXqO/swo5OMuRjdFGno7Fi
      U8eUAMS9MvZmuPGpMVTdQFFUDAVmpsbTPSSxQ2XkJ8GPNVXx9b//Ou5cO5GYzkc//YV0D0ns
      UBk5BTIMAy2VJKXpWK02rFbLpo8pUyBxr4z9omxFUbDa7Fgf8ASjlkoQjsTIceVhVTRCoQio
      FvJyXWi6gc2ikEhq2O3yGKR4ZxkZwLvTGB+6ThwLK6EU7ZVW+m6mqPAWUF9RyPjiOmWOOPPx
      PLoaK9M9WJHBsjQAlaaOHtaD88RmV4lGIhipOPFkHoqqEFy8yYrq4MCBJgzDQNf129MqTUv3
      wEWGydIAwDc7yuyqwZ6uVqwqVLfA0NVe/Ot52HMcpKIammFgURQU5fZj8Xf+K8Qd2RmAHuN8
      7wCl1VUMjU1TbI8xs7hCOJJgX72dvIISamoU+q6Ps6+rCfWXEahqRq76ijTKyFWgd3VnWgOg
      KKiKgq7rKIrKnR/yigK6bqCoKgqyCiTeLmNXgd6VoqBafn1p1GJ5+1KpqsqURzyYzAmEqUkA
      wtQkAGFqEoAwNQlAmJoEIExNAhCmJgEIU5MAhKlJAMLUJABhahKAMDUJQJiaBCBMTQIQpiYB
      CFPL2gBioWUGBwZYDsUx9BRTo0MsLYcxtCTr4SgYKQKBlXQPU2S47HwiDI35BT9VNdUM9F2h
      1uMg5qpkaegqjrZWbvpDuFPLJAvrkO+VEQ+SpQFYqGtoYG5yGLengkAkSGdrGfOJIOFonJnR
      fvKKd/H+lkJ0Xb/7K5lMpnvgIsNkaQAGk0N9pFyVdLeUcf3SEjHNIJFMkKda2NXYTnhhjnAi
      hdthRVVVVFXFZpNd4sSvy85rAD3G5NQC/lvj9A9NULu7ikun32QprFKU7yTH4WLPYx2MjU3J
      F0yKB8rObVE2QLZFEffK2O8HEOJRkQCEqUkAwtQkAGFqEoAwNQlAmJoEIExNAhCmJgEIU5MA
      hKlJAMLUJABhahKAMDUJQJiaBCBMTQIQpiYBCFPL2gAS0RCDN4bRDYivL3H6zTOcv9xPLBph
      KbiCnoowc3Mp3cMUGS5rA/AtzjO/MI9hwOrSHLu69nNgbzdWI44vuMrItWvY3O50D1NkuCzd
      FQKq6pqYX/IDYMstYux6LyOxFPv2tjMzchVXcT0t+U7ZFkU80P8BMTOeJTt/3kUAAAAASUVO
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Top5 towns quaterly pattern' width='192'>
      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
      tF34/x0iQyLQKeHqAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Transport regulatory offences pattern' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='drug vs theft' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='liquor offences' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='theft breakdown' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='theft from motor historical pattern' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='top3 Quaterly pattern' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='transport regulatory' width='192'>
      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
      XgAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
